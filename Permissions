
Permissions

There are 3 type of permissions
	r   -   read (4)
	w   -   write (2)
	x   -   execute = (1)

Each permission (rwx) can be controlled at three levels:
	u   -    user = yourself
	g   -    group = can be people in the same project
	o   -    other = everyone on the system (the whole world)
	
	
chmod --> command to change permission

Common Options
-f force (no error message is generated if the change is unsuccessful)
-R recursively descend through the directory structure and change the modes


File or Directory permission can be displayed by running ls â€“l command
-rwxrwxrwx

Read Permission:
	Effect on Files:
		File can be read
	Effect on Directories:
		Directory's contents can be listed

Write Permission:
	Effect on Files:
		File can be modifed
	Effect on Directories:
		Directory's contents can be modified(create new  files, rename files/folders) but only if the executable attribute is also set
		
Execute Permission
	Effect on Files:
		File can be treated as as program to be executed
	Effect on Directories:
		Allows a directory to be entered or "cd"ed into

- (No) Permission
	Effect on Files:
		File caannot be read, modified, executed depending on the location of the - character
	Effect on Directories:
		Directory contents cannot be shown, modified, or "cd"ed into depending on the location of the - character


Examples
chmod -v u-x,g+wx,o-rwx user.txt (-v is also shows below line the results for info)
chmod 755 file1 or chmod u=rwx,go=rx file1
chmod a+r,a-wx --> -r--r--r-- (a for all three user, group and others)
chmod ug=rw,o= user.txt (assign user and group at the same time, remove everything from others)
chmod -R 750 dir1/  --> gives the permission for dir1 directory with recursive)
chmod --refence=abc.txt xyz.txt (assigns abc's all permissions to xyz.txt, get as reference!)

On directory side: write permission is only in  effect if the execute permission is assigned. IF directory owner has r-- and rw-, both is kind of the same but if you give rwx, then w is in action like modification for the directory.
In a directory, it has all user permissions like rwx and a file inside of this directory has no permissions the you can delete it. PArent directory permission is important!


Most common notations: 755 for directories and 644 for files

If you want to assign for example in /home directory: all directories has 750 and all files 640 use the following commands:

find ~-tpye f -exec chmod 640{} \;  (tilda means in my current directory which is /home/)
find ~ -type d -exec chmod 750 {} \;  

directory has x (execute) permissions because when we use cd command to change directory we are executing it actually.
If we remote x permission on directory, if we try (cd "directory_name") it gives permission denied!

If you take all permissions back from root, root is still super user and does not affect!!

## UMASK
displaying the UMASK
umask

setting a new umask value
umask new_value    # => Ex: umask 0022
